// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type MountRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountRequest) Reset()         { *m = MountRequest{} }
func (m *MountRequest) String() string { return proto.CompactTextString(m) }
func (*MountRequest) ProtoMessage()    {}
func (*MountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *MountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountRequest.Unmarshal(m, b)
}
func (m *MountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountRequest.Marshal(b, m, deterministic)
}
func (m *MountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountRequest.Merge(m, src)
}
func (m *MountRequest) XXX_Size() int {
	return xxx_messageInfo_MountRequest.Size(m)
}
func (m *MountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MountRequest proto.InternalMessageInfo

func (m *MountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MountRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type MountResponse struct {
	MetaData             []byte   `protobuf:"bytes,1,opt,name=metaData,proto3" json:"metaData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MountResponse) Reset()         { *m = MountResponse{} }
func (m *MountResponse) String() string { return proto.CompactTextString(m) }
func (*MountResponse) ProtoMessage()    {}
func (*MountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *MountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountResponse.Unmarshal(m, b)
}
func (m *MountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountResponse.Marshal(b, m, deterministic)
}
func (m *MountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountResponse.Merge(m, src)
}
func (m *MountResponse) XXX_Size() int {
	return xxx_messageInfo_MountResponse.Size(m)
}
func (m *MountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MountResponse proto.InternalMessageInfo

func (m *MountResponse) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

type UnMountRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnMountRequest) Reset()         { *m = UnMountRequest{} }
func (m *UnMountRequest) String() string { return proto.CompactTextString(m) }
func (*UnMountRequest) ProtoMessage()    {}
func (*UnMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *UnMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnMountRequest.Unmarshal(m, b)
}
func (m *UnMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnMountRequest.Marshal(b, m, deterministic)
}
func (m *UnMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnMountRequest.Merge(m, src)
}
func (m *UnMountRequest) XXX_Size() int {
	return xxx_messageInfo_UnMountRequest.Size(m)
}
func (m *UnMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnMountRequest proto.InternalMessageInfo

func (m *UnMountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UnMountRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ReadRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MetaData             []byte   `protobuf:"bytes,2,opt,name=metaData,proto3" json:"metaData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadRequest) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

type ReadResponse struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type SaveRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content              []byte   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SaveRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SaveRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type RemoveRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoveRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "grpc_api.Empty")
	proto.RegisterType((*MountRequest)(nil), "grpc_api.MountRequest")
	proto.RegisterType((*MountResponse)(nil), "grpc_api.MountResponse")
	proto.RegisterType((*UnMountRequest)(nil), "grpc_api.UnMountRequest")
	proto.RegisterType((*ReadRequest)(nil), "grpc_api.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "grpc_api.ReadResponse")
	proto.RegisterType((*SaveRequest)(nil), "grpc_api.SaveRequest")
	proto.RegisterType((*RemoveRequest)(nil), "grpc_api.RemoveRequest")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcd, 0x6e, 0xe2, 0x30,
	0x14, 0x85, 0x49, 0x26, 0xfc, 0x5d, 0x7e, 0x46, 0xba, 0xd2, 0x40, 0x94, 0xd5, 0xc8, 0x2b, 0x34,
	0x23, 0x02, 0x02, 0x54, 0x89, 0x2e, 0xab, 0xb6, 0x9b, 0xaa, 0x55, 0x15, 0xd4, 0x4d, 0x37, 0x95,
	0x09, 0x2e, 0x78, 0x11, 0xdb, 0x8d, 0x1d, 0xa4, 0x3e, 0x63, 0x5f, 0xaa, 0x22, 0x84, 0x62, 0x28,
	0x5d, 0xb0, 0x8b, 0xaf, 0x73, 0xce, 0xb9, 0xfa, 0x8e, 0x0c, 0x75, 0xaa, 0x78, 0xa8, 0x52, 0x69,
	0x24, 0xd6, 0x96, 0xa9, 0x8a, 0x5f, 0xa8, 0xe2, 0xa4, 0x0a, 0xe5, 0x9b, 0x44, 0x99, 0x77, 0x32,
	0x82, 0xe6, 0xbd, 0xcc, 0x84, 0x89, 0xd8, 0x5b, 0xc6, 0xb4, 0xc1, 0x36, 0xb8, 0x7c, 0xe1, 0x3b,
	0x7f, 0x9d, 0x5e, 0x3d, 0x72, 0xf9, 0x02, 0x11, 0x3c, 0x45, 0xcd, 0xca, 0x77, 0xf3, 0x49, 0xfe,
	0x4d, 0xfe, 0x43, 0xab, 0xd0, 0x68, 0x25, 0x85, 0x66, 0x18, 0x40, 0x2d, 0x61, 0x86, 0x5e, 0x53,
	0x43, 0x73, 0x69, 0x33, 0xfa, 0x3a, 0x93, 0x09, 0xb4, 0x9f, 0xc4, 0xd9, 0x11, 0x53, 0x68, 0x44,
	0x8c, 0x2e, 0x7e, 0x92, 0xd8, 0x81, 0xee, 0x51, 0x60, 0x0f, 0x9a, 0x5b, 0x69, 0xb1, 0x9c, 0x0f,
	0xd5, 0x58, 0x0a, 0xc3, 0x84, 0x29, 0x76, 0xdb, 0x1d, 0xc9, 0x1d, 0x34, 0x66, 0x74, 0xcd, 0xce,
	0xd8, 0xcb, 0x36, 0xfb, 0x75, 0x68, 0x36, 0x86, 0x56, 0xc4, 0x12, 0x79, 0x96, 0xdd, 0xe8, 0xc3,
	0x05, 0xef, 0xe1, 0x76, 0x36, 0xc3, 0x7f, 0xe0, 0x3d, 0x72, 0xb1, 0xc4, 0xdf, 0xe1, 0xae, 0xa2,
	0x30, 0xef, 0x27, 0x38, 0x1e, 0x90, 0x12, 0x5e, 0x42, 0x39, 0xe7, 0x89, 0x9d, 0xfd, 0x9d, 0x0d,
	0x38, 0xe8, 0x7e, 0x9b, 0x6f, 0x51, 0x90, 0x12, 0x5e, 0x40, 0xb5, 0x68, 0x03, 0xfd, 0xfd, 0x5f,
	0x87, 0x05, 0x9d, 0xca, 0x9c, 0x82, 0xb7, 0x81, 0x8a, 0x7f, 0xf6, 0x57, 0x56, 0x3f, 0x41, 0xe7,
	0x78, 0xbc, 0x0b, 0x1c, 0x3a, 0x38, 0x02, 0x6f, 0x43, 0xd9, 0x96, 0x5a, 0xd4, 0x4f, 0x84, 0xf5,
	0x1c, 0x9c, 0x40, 0x65, 0x0b, 0x13, 0xbb, 0xb6, 0xb3, 0x85, 0xf7, 0x84, 0xee, 0x6a, 0xf8, 0x1c,
	0x2e, 0xb9, 0x59, 0x65, 0xf3, 0x30, 0x96, 0xc9, 0x20, 0xa5, 0x52, 0x70, 0x9d, 0x50, 0xc1, 0xa4,
	0x91, 0x83, 0x38, 0xd3, 0x46, 0x26, 0x7d, 0xf1, 0xaa, 0xfb, 0x9a, 0xa5, 0x6b, 0x96, 0x0e, 0xa8,
	0xe2, 0xf3, 0x4a, 0xfe, 0x2e, 0xc6, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x97, 0xf1, 0x27, 0xfe,
	0x24, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NFSSClient is the client API for NFSS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NFSSClient interface {
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	Mount(ctx context.Context, in *MountRequest, opts ...grpc.CallOption) (*MountResponse, error)
	UnMount(ctx context.Context, in *UnMountRequest, opts ...grpc.CallOption) (*Empty, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (NFSS_ReadClient, error)
	Save(ctx context.Context, opts ...grpc.CallOption) (NFSS_SaveClient, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Empty, error)
}

type nFSSClient struct {
	cc *grpc.ClientConn
}

func NewNFSSClient(cc *grpc.ClientConn) NFSSClient {
	return &nFSSClient{cc}
}

func (c *nFSSClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc_api.NFSS/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFSSClient) Mount(ctx context.Context, in *MountRequest, opts ...grpc.CallOption) (*MountResponse, error) {
	out := new(MountResponse)
	err := c.cc.Invoke(ctx, "/grpc_api.NFSS/Mount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFSSClient) UnMount(ctx context.Context, in *UnMountRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc_api.NFSS/UnMount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nFSSClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (NFSS_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NFSS_serviceDesc.Streams[0], "/grpc_api.NFSS/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &nFSSReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NFSS_ReadClient interface {
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type nFSSReadClient struct {
	grpc.ClientStream
}

func (x *nFSSReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nFSSClient) Save(ctx context.Context, opts ...grpc.CallOption) (NFSS_SaveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NFSS_serviceDesc.Streams[1], "/grpc_api.NFSS/Save", opts...)
	if err != nil {
		return nil, err
	}
	x := &nFSSSaveClient{stream}
	return x, nil
}

type NFSS_SaveClient interface {
	Send(*SaveRequest) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type nFSSSaveClient struct {
	grpc.ClientStream
}

func (x *nFSSSaveClient) Send(m *SaveRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nFSSSaveClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nFSSClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc_api.NFSS/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NFSSServer is the server API for NFSS service.
type NFSSServer interface {
	Ping(context.Context, *Empty) (*Empty, error)
	Mount(context.Context, *MountRequest) (*MountResponse, error)
	UnMount(context.Context, *UnMountRequest) (*Empty, error)
	Read(*ReadRequest, NFSS_ReadServer) error
	Save(NFSS_SaveServer) error
	Remove(context.Context, *RemoveRequest) (*Empty, error)
}

// UnimplementedNFSSServer can be embedded to have forward compatible implementations.
type UnimplementedNFSSServer struct {
}

func (*UnimplementedNFSSServer) Ping(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedNFSSServer) Mount(ctx context.Context, req *MountRequest) (*MountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mount not implemented")
}
func (*UnimplementedNFSSServer) UnMount(ctx context.Context, req *UnMountRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnMount not implemented")
}
func (*UnimplementedNFSSServer) Read(req *ReadRequest, srv NFSS_ReadServer) error {
	return status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedNFSSServer) Save(srv NFSS_SaveServer) error {
	return status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (*UnimplementedNFSSServer) Remove(ctx context.Context, req *RemoveRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterNFSSServer(s *grpc.Server, srv NFSSServer) {
	s.RegisterService(&_NFSS_serviceDesc, srv)
}

func _NFSS_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFSSServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_api.NFSS/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFSSServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFSS_Mount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFSSServer).Mount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_api.NFSS/Mount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFSSServer).Mount(ctx, req.(*MountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFSS_UnMount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnMountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFSSServer).UnMount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_api.NFSS/UnMount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFSSServer).UnMount(ctx, req.(*UnMountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NFSS_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NFSSServer).Read(m, &nFSSReadServer{stream})
}

type NFSS_ReadServer interface {
	Send(*ReadResponse) error
	grpc.ServerStream
}

type nFSSReadServer struct {
	grpc.ServerStream
}

func (x *nFSSReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NFSS_Save_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NFSSServer).Save(&nFSSSaveServer{stream})
}

type NFSS_SaveServer interface {
	SendAndClose(*Empty) error
	Recv() (*SaveRequest, error)
	grpc.ServerStream
}

type nFSSSaveServer struct {
	grpc.ServerStream
}

func (x *nFSSSaveServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nFSSSaveServer) Recv() (*SaveRequest, error) {
	m := new(SaveRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _NFSS_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NFSSServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_api.NFSS/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NFSSServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NFSS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_api.NFSS",
	HandlerType: (*NFSSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _NFSS_Ping_Handler,
		},
		{
			MethodName: "Mount",
			Handler:    _NFSS_Mount_Handler,
		},
		{
			MethodName: "UnMount",
			Handler:    _NFSS_UnMount_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _NFSS_Remove_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _NFSS_Read_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Save",
			Handler:       _NFSS_Save_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}
